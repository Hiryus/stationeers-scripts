alias d.sensor d0
alias d.inputCmd d1
alias d.outputCmd d2
alias d.coolerCmd d3
alias d.heaterCmd d4
alias d.purgeOverride d5

alias r.shouldAct r0
alias r.pressure r1
alias r.temperature r2
alias r.ratioOxygen r3
alias r.ratioPolutant r4
alias r.minTemperature r5
alias r.maxTemperature r6
alias r.forcePurge r7
​
add r.minTemperature 273.15 20
add r.maxTemperature 273.15 35
​
# Reset commands before start
# (this ensure to flush potential manual interractions)
s d.outputCmd Setting 0
s d.inputCmd Setting 0
s d.heaterCmd Setting 0
s d.coolerCmd Setting 0
yield

start:​
# Read sensor values
l r.pressure d.sensor Pressure
l r.temperature d.sensor Temperature
l r.ratioOxygen d.sensor RatioOxygen
l r.ratioPolutant d.sensor RatioPollutant
l r.forcePurge d.purgeOverride Setting

command:
# If purgeOverride lever is active, branch to purge
beq r.forcePurge 1 purge

composition:
# Atmosphere composition regulation
# First check if the atmosphere needs to be purged, if any
# - Bypass checks if no atmosphere
beq r.pressure 0 temperature
# - if RatioPolutant > 0.5%
sgt r.shouldAct r.ratioPolutant 0.005
beq r.shouldAct 1 purge
# - if RatioOxygen < 50%
slt r.shouldAct r.ratioOxygen 0.5
beq r.shouldAct 1 purge

temperature:
# Temperatur regulation​
# Set heaters command to (current_temperature < min_temperature)
slt r.shouldAct r.temperature r.minTemperature
s d.heaterCmd Setting r.shouldAct​
​# Set coolers command to (current_temperature > max_temperature)
sgt r.shouldAct r.temperature r.maxTemperature
s d.coolerCmd Setting r.shouldAct​

pressure:
# Pressure regulation​
# Set atmosphere input to (current_pressure < min_pressure​)
slt r.shouldAct r.pressure 80
s d.inputCmd Setting r.shouldAct​
# Set atmosphere output to (current_pressure > max_pressure​)
sgt r.shouldAct r.pressure 120
s d.outputCmd Setting r.shouldAct​

loop:
# Sleep, then restart​
yield​
j start

purge:
# Activate atmosphere output and stop atmosphere input
s d.outputCmd Setting 1
s d.inputCmd Setting 0
# Shut down heaters and coolers too
s d.heaterCmd Setting 0
s d.coolerCmd Setting 0
# Loop
j loop
