# Minimum filter quantity for each slot
alias r.slot.0 r0
alias r.slot.1 r1
# Minimum filter quantity (both slots combined)
alias r.quantity r2
# Error boolean
alias r.error r3

start:
# Reset error
move r.error 0

# Filtration #0
brdne d0 3
ls r.slot.0 d0 0 Quantity
ls r.slot.1 d0 1 Quantity
jal compute

# Filtration #1
brdne d1 3
ls r.slot.0 d1 0 Quantity
ls r.slot.1 d1 1 Quantity
jal compute

# Filtration #2
brdne d2 3
ls r.slot.0 d2 0 Quantity
ls r.slot.1 d2 1 Quantity
jal compute

# Filtration #3
brdne d3 3
ls r.slot.0 d3 0 Quantity
ls r.slot.1 d3 1 Quantity
jal compute

# Filtration #4
brdne d4 3
ls r.slot.0 d4 0 Quantity
ls r.slot.1 d4 1 Quantity
jal compute

# Filtration #5
brdne d5 3
ls r.slot.0 d5 0 Quantity
ls r.slot.1 d5 1 Quantity
jal compute

# Update db
s db Setting r.error

# Sleep and restart​
yield​
j start

compute:
# Compute remaining quantity and update error if needed
add r.quantity r.slot.0 r.slot.1
bgtz r.quantity ra
move r.error 1
j ra
