# Minimum fuel before launch
define MIN_FUEL 5000

# Automation module Mode options
define MODE_IDLE 0
define MODE_LAUNCHING 1
define MODE_TRAVELING 2
define MODE_ARIVED 3
define MODE_IDLE_AT_DEST 4
define MODE_RETURNING 5
define MODE_RETURNED 6

# Automation module Activate options
define ACTIVATE_NONE 0
define ACTIVATE_LAUNCH 1
define ACTIVATE_TRAVEL 2
define ACTIVATE_STOP_TRAVEL 4
define ACTIVATE_RETURN 5

alias AutomationModule d0
alias MiningModule d1
alias SiloModule d2
alias r.mode r1
alias r.fuelQty r2
alias r.siloQty r3
alias r.returnCost r4
alias r.collectables r5

loop:
yield
# Load data
l r.collectables AutomationModule CollectableGoods
l r.fuelQty AutomationModule Fuel
l r.mode AutomationModule Mode
l r.returnCost AutomationModule ReturnFuelCost
l r.siloQty SiloModule Quantity
# Adjust return cost for safety
mul r.returnCost r.returnCost 2.0
# Wait during transient modes
beq r.mode MODE_LAUNCHING loop
beq r.mode MODE_ARIVED loop
beq r.mode MODE_RETURNING loop
beq r.mode MODE_RETURNED loop
# Control rocket
beq r.mode MODE_IDLE launch
blt r.fuelQty r.returnCost return
beq r.mode MODE_IDLE_AT_DEST mine
beq r.mode MODE_TRAVELING travel
j loop

launch:
# Wait until silo is empty
bgt r.siloQty 0 unload
# Wait until fuel tank is full
blt r.fuelQty MIN_FUEL loop
# Else, launch
s SiloModule Open 0
sb HASH("StructureLargeHangerDoor") Open 1
sleep 1
s AutomationModule Activate ACTIVATE_LAUNCH
yield
s AutomationModule Activate ACTIVATE_NONE
j loop

unload:
s SiloModule Open 1
sleep 5 # to let time fot the rocket to enter
sb HASH("StructureLargeHangerDoor") Open 0
j loop

mine:
# Travel if nothing to mine at location
beqz r.collectables travel
# Else, activate miner
s MiningModule Activate 1
j loop

travel:
s AutomationModule Activate ACTIVATE_TRAVEL
yield
s AutomationModule Activate ACTIVATE_NONE
j loop

return:
s AutomationModule Activate ACTIVATE_RETURN
yield
s AutomationModule Activate ACTIVATE_NONE
j loop
